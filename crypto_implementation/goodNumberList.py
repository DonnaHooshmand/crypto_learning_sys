"""
Author: Missy Shi

Date: 11/23/2020

Description: Prime list generator
    For webpage dice using, user clicks dice, it will get a number from dataset
    This file is using for generate those dataset

"""

from prime_list import *
import random
import math


def primePQ(num_prime: int, num_len: int) -> (list, list):
    """generate two prime numbers
    num_prime: number of prime numbers we want in prime list
    num_len: length of prime numbers
    len(p) != len(q), so set q list by using num_len+1
    """
    p_list = randomNumGenerator(num_prime, num_len)
    q_list = randomNumGenerator(num_prime, num_len + 1)
    # p = random.choice(p_list)
    # p_list.remove(p)
    # q = random.choice(q_list)
    # q_list.remove(q)
    # return p, q
    return p_list, q_list


def main():
    # num_prime = 20
    # prime_list = randomNumGenerator(num_prime, 5)
    # print(prime_list)
    # 5-prime lists
    # p_list = [179633, 122201, 130633, 118163, 192889]
    # q_list = [1778993, 1040183, 1215349, 1539389, 1022291]
    # 10-prime list
    # p_list = [161033, 196687, 106703, 183797, 191089, 183041, 134507, 163063, 131969, 111581]
    # q_list = [1192837, 1575137, 1263109, 1951819, 1282529, 1740731, 1465561, 1688909, 1590397, 1745927]
    # 20-prime list
    p_list, q_list = primePQ(20, 4)

    # p_list = [100357, 166429, 116269, 171169, 189529, 182981, 173059, 190529, 189583, 106123, 160483, 105509, 160081, 149161, 144737, 161033, 140159, 176779, 198929, 121487]
    # q_list = [1979581, 1096541, 1187353, 1752889, 1484183, 1533127, 1380083, 1029157, 1633553, 1761187, 1008421, 1639367, 1326167, 1674847, 1624507, 1954369, 1163993, 1375637, 1190573, 1076077]

    # 10-prime list, 3 e
    # p_list = [11261, 17807, 12391, 16127, 19709, 12227, 12739, 12161, 13831, 12457]
    # q_list = [163819, 119359, 122849, 187073, 158161, 123923, 147283, 173981, 189017, 152981]
    # e_list = [97, 107, 157]

    # 20-prime list, 3 e
    # p_list = [15797, 13883, 13147, 11093, 17431, 16981, 15907, 19541, 10457, 17443, 13183, 13721, 16477, 15013, 15391, 16193, 16333, 10979, 11161, 12113]
    # q_list = [155269, 121591, 159667, 113383, 179953, 163741, 115763, 154493, 107837, 115361, 167953, 158489, 122833, 131267, 164587, 130079, 110419, 120619, 174061, 169693]
    # e_list = [97, 107, 157]

    # 20-prime, 6 e
    # p_list = [15787, 13187, 14783, 16651, 18899, 15451, 13711, 18133, 17393, 19387, 12569, 13591, 16447, 10453, 18839, 16253, 17393, 13781, 17987, 16661]
    # q_list = [186679, 145931, 174799, 159763, 184721, 172751, 183763, 147727, 198967, 131149, 138449, 161743, 175447, 110819, 118037, 191453, 155731, 132383, 108187, 194899]
    # e_list = [97, 137, 107, 277, 157, 127]

    # p_list = [17393, 18899, 12401, 12899, 18121, 15737, 16189, 10007, 15971, 12277, 12301, 12653, 13399, 15373, 12343, 11239, 19541, 17377, 14851, 10771]
    # q_list = [148399, 146701, 192583, 113899, 143609, 123619, 119549, 176903, 114613, 157841, 138191, 109583, 116741, 168523, 186397, 149971, 120749, 178489, 102497, 125687]
    # e_list = [97, 137, 107, 277, 157, 127]

    # p_list = [10859, 15629, 12253, 11699, 17959, 10853, 19457, 12227, 15287, 19597, 18229, 18587, 19403, 10859, 14243, 10303, 11503, 13829, 14489, 18233]
    # q_list = [155797, 121967, 121909, 197419, 113761, 165037, 165961, 145361, 123203, 107599, 105071, 144539, 158611, 121313, 161873, 146777, 199967, 176089, 176299, 116101]
    # e_list = [97, 137, 107, 367, 179, 277, 373, 283, 157, 127]

    # length of prime list: 20; length of the e set: 10
    # [15289, 14243, 10789, 11423, 14143, 15139, 19751, 10987, 19417, 19037, 16183, 14699, 13219, 14771, 14591, 11743, 10733, 10867, 19759, 17327]
    # [165181, 138163, 165527, 136471, 115861, 115183, 146309, 105683, 195343, 181523, 110933, 115513, 127037, 185183, 151561, 180211, 149491, 119737, 139333, 150767]
    # {97, 137, 107, 367, 179, 277, 373, 283, 157, 127}

    # length of the p list: 20
    # [15277, 10163, 17449, 18457, 10639, 15401, 18731, 18439, 12791, 12263, 19979, 11083, 11069, 18583, 15121, 14149, 17573, 10501, 15107, 17011]
    # length of the q list: 20
    # [101527, 113213, 144731, 127843, 110023, 176191, 144481, 172049, 136603, 184687, 102077, 134857, 158551, 130343, 139483, 120431, 188137, 148693, 153947, 138617]
    # length of the e set: 10
    # {97, 137, 107, 367, 179, 277, 373, 283, 157, 127}

    # length of the p list: 20
    # [17189, 11593, 19121, 16063, 15889, 19387, 19429, 10459, 10259, 16381, 19891, 16519, 16787, 13099, 19441, 18433, 12497, 10369, 12713, 11369]
    # length of the q list: 20
    # [142873, 117037, 161881, 183907, 179519, 170197, 131939, 120779, 138139, 126943, 101117, 158551, 101987, 161059, 180233, 171467, 199889, 151553, 117053, 113657]
    # length of the e set: 10
    # {97, 137, 107, 367, 179, 277, 373, 283, 157, 127}

    # This list of e can work with any combination of p & q above
    # e_list = [97, 107, 127, 137, 157, 277, 283, 367, 373, 31, 179]
    # e_list = [97, 107, 157]
    # e_list = [97, 107, 127, 137, 157, 277]
    e_list = [97, 107, 127, 137, 157, 277, 283, 367, 373, 179]
    # print(f"length of e list is: {len(e_list)}")
    e_set = set()
    # check to make sure, all numbers can work together (universal lists)
    for e in e_list:
        for p in p_list:
            for q in q_list:
                r = (p - 1) * (q - 1)
                if math.gcd(e, r) == 1:
                    e_set.add(e)
                else:
                    print("this e is not valid!")
                    continue

    print(f"length of the p list: {len(p_list)}")
    print(p_list)
    print(f"length of the q list: {len(q_list)}")
    print(q_list)
    print(f"length of the e set: {len(e_set)}")
    print(e_set)
    # p = random.choice(prime_list)
    # prime_list.remove(p)
    # q = random.choice(prime_list)
    # prime_list.remove(q)
    # r = (p-1)*(q-1)
    # e = eGenerator(r)
    # e_list = []


if __name__ == '__main__':
    main()